{"version":3,"sources":["redux/actions/common.ts","redux/reducers/common.ts","redux/reducers/homeDetails.ts","redux/actions/postNotes.ts","redux/reducers/postNotes.ts","redux/utils/utilities.ts","redux/sagas/common.ts","redux/sagas/homeDetails.ts","redux/sagas/postNotes.ts","redux/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["GET_RESULT","GET_WITHPARA_RESULT","POST_INSERT_RESULT","POST_UPDATE_RESULT","POST_DELETE_RESULT","INITIAL_STATE","resultGet","resultGetWithPara","resultPostInsert","resultPostUpdate","resultPostDelete","initialState","userDetails","POSTNOTES_RESULT","GET_POSTNOTES_RESULT","resultPostNotesInsert","resultGetPostNotes","helperWatcher","worker","type","regenerator_default","a","mark","_callee","action","wrap","_context","prev","next","take","sent","fork","stop","getWithWorker","getWithParaWorker","workerPostInsert","workerPostUpdate","workerPostDelete","url","res","console","log","axios","method","then","response","data","catch","error","put","payload","t0","_marked","_context2","_marked2","_context3","_marked3","_context4","_marked4","_context5","_marked5","commonGetWatcher","commonGetWithParaWatcher","commonPostInsertWatcher","commonPostUpdateWatcher","commonPostDeleteWatcher","userListWorker","_ref","homeDetails_marked","userListWatcher","postNotesWorker","getPostNotesWorker","postNotes_marked","postNotes_marked2","postNotesWatcher","getPostNotesWatcher","rootSaga","sagas","all","map","saga","spawn","call","abrupt","rootReducer","combineReducers","common","state","arguments","length","undefined","Object","objectSpread","home","account","serviceType","defineProperty","receivingAddress","address","loading","postNotes","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","react","className","Home","Loadable","loader","Promise","__webpack_require__","e","bind","About","Contact","PostNotesDetails","App","props","es","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","react_default","createElement","dist_web","id","width","style","backgroundColor","params","particles","number","value","size","interactivity","events","onhover","enable","mode","position","top","left","height","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31effbbd.chunk.js","sourcesContent":["export const GET = \"GET\";\nexport const GET_RESULT = \"GET_RESULT\";\n\nexport const GET_WITHPARA = \"GET_WITHPARA\";\nexport const GET_WITHPARA_RESULT = \"GET_WITHPARA_RESULT\";\n\nexport const POST_INSERT = \"POST_INSERT\";\nexport const POST_INSERT_RESULT = \"POST_INSERT_RESULT\";\n\nexport const POST_UPDATE = \"POST_UPDATE\";\nexport const POST_UPDATE_RESULT = \"POST_UPDATE_RESULT\";\n\nexport const POST_DELETE = \"POST_DELETE\";\nexport const POST_DELETE_RESULT = \"POST_DELETE_RESULT\";\n\nexport const onCommonGet = args => {\n  return {\n    type: GET,\n    ...args\n  };\n};\n\nexport const onCommonGetWithPara = args => {\n  return {\n    type: GET_WITHPARA,\n    ...args\n  };\n};\n\nexport const onCommonPostInsert = args => {\n  return {\n    type: POST_INSERT,\n    ...args\n  };\n};\n\nexport const onCommonPostUpdate = args => {\n  return {\n    type: POST_UPDATE,\n    ...args\n  };\n};\n\nexport const onCommonPostDelete = args => {\n  return {\n    type: POST_DELETE,\n    ...args\n  };\n};\n","import {\n  GET_RESULT,\n  GET_WITHPARA_RESULT,\n  POST_INSERT_RESULT,\n  POST_UPDATE_RESULT,\n  POST_DELETE_RESULT\n} from \"../actions/common\";\n\nconst INITIAL_STATE = {\n  resultGet: [],\n  resultGetWithPara: [],\n  resultPostInsert: [],\n  resultPostUpdate: [],\n  resultPostDelete: []\n};\n\nexport default (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case GET_RESULT:\n      return { ...state, ...action.payload };\n    case GET_WITHPARA_RESULT:\n      return { ...state, ...action.payload };\n    case POST_INSERT_RESULT:\n      return { ...state, ...action.payload };\n    case POST_UPDATE_RESULT:\n      return { ...state, ...action.payload };\n    case POST_DELETE_RESULT:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  userDetails: {}\n};\n\nexport default (state = initialState, action) => {\n  const account = action.payload ? action.payload.serviceType : null;\n  switch (action.type) {\n    case \"Testing\":\n      return {\n        ...state,\n        [account]: {\n          ...state[account],\n          receivingAddress: action.payload.address,\n          loading: {\n            ...state[account].loading,\n            receivingAddress: false\n          }\n        }\n      };\n  }\n  return state;\n};\n","export const POSTNOTES = \"POSTNOTES\";\nexport const POSTNOTES_RESULT = \"POSTNOTES_RESULT\";\n\nexport const GET_POSTNOTES = \"GET_POSTNOTES\";\nexport const GET_POSTNOTES_RESULT = \"GET_POSTNOTES_RESULT\";\n\nexport const onPostNotes = args => {\n  return {\n    type: POSTNOTES,\n    ...args\n  };\n};\n\nexport const onGetPostNotes = args => {\n  return {\n    type: GET_POSTNOTES,\n    ...args\n  };\n};\n","import { POSTNOTES_RESULT, GET_POSTNOTES_RESULT } from \"../actions/postNotes\";\n\nconst INITIAL_STATE = {\n  resultPostNotesInsert: [],\n  resultGetPostNotes: []\n};\n\nexport default (state = INITIAL_STATE, action: any) => {\n  switch (action.type) {\n    case POSTNOTES_RESULT:\n    case GET_POSTNOTES_RESULT:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","import { take, fork } from \"redux-saga/effects\";\n\nexport const helperWatcher = (worker, type) => {\n  return function*() {\n    while (true) {\n      const action = yield take(type);\n      yield fork(worker, action);\n    }\n  };\n};\n","import { put } from \"redux-saga/effects\";\nimport { helperWatcher } from \"../utils/utilities\";\nimport axios from \"axios\";\n\nimport {\n  GET,\n  GET_RESULT,\n  GET_WITHPARA,\n  GET_WITHPARA_RESULT,\n  POST_INSERT,\n  POST_INSERT_RESULT,\n  POST_UPDATE,\n  POST_UPDATE_RESULT,\n  POST_DELETE,\n  POST_DELETE_RESULT\n} from \"../actions/common\";\n\nfunction* getWithWorker(action: any) {\n  const { url } = action;\n  try {\n    console.log({ url });\n    let res = yield axios({\n      method: \"get\",\n      url\n    })\n      .then((response: any) => {\n        return response.data;\n      })\n      .catch(function(error: any) {\n        return error;\n      });\n    yield put({\n      type: GET_RESULT,\n      payload: {\n        resultGet: {\n          res\n        }\n      }\n    });\n  } catch (e) {\n    console.log(\"error\", e);\n  }\n}\n\nfunction* getWithParaWorker(action: any) {\n  const { url, data } = action;\n  try {\n    console.log({ url, data });\n    let res = yield axios({\n      method: \"post\",\n      url,\n      data\n    })\n      .then((response: any) => {\n        return response.data;\n      })\n      .catch(function(error: any) {\n        return error;\n      });\n    yield put({\n      type: GET_WITHPARA_RESULT,\n      payload: {\n        resultGetWithPara: {\n          res\n        }\n      }\n    });\n  } catch (e) {\n    console.log(\"error\", e);\n  }\n}\n\nfunction* workerPostInsert(action: any) {\n  const { url, data } = action;\n  try {\n    console.log({ url, data });\n    let res = yield axios({\n      method: \"post\",\n      url,\n      data\n    })\n      .then((response: any) => {\n        console.log({ response });\n        return response.data;\n      })\n      .catch(function(error: any) {\n        return error;\n      });\n    yield put({\n      type: POST_INSERT_RESULT,\n      payload: {\n        resultPostInsert: {\n          res\n        }\n      }\n    });\n  } catch (e) {\n    console.log(\"error\", e);\n  }\n}\n\nfunction* workerPostUpdate(action: any) {\n  const { url, data } = action;\n  try {\n    // console.log( { url, body } );\n    let res = yield axios({\n      method: \"post\",\n      url,\n      data\n    })\n      .then((response: any) => {\n        return response.data;\n      })\n      .catch(function(error: any) {\n        return error;\n      });\n    yield put({\n      type: POST_UPDATE_RESULT,\n      payload: {\n        resultPostUpdate: {\n          res\n        }\n      }\n    });\n  } catch (e) {\n    console.log(\"error\", e);\n  }\n}\n\nfunction* workerPostDelete(action: any) {\n  const { url, data } = action;\n  try {\n    // console.log( { url, body } );\n    let res = yield axios({\n      method: \"post\",\n      url,\n      data\n    })\n      .then((response: any) => {\n        return response.data;\n      })\n      .catch(function(error: any) {\n        return error;\n      });\n    yield put({\n      type: POST_DELETE_RESULT,\n      payload: {\n        resultPostDelete: {\n          res\n        }\n      }\n    });\n  } catch (e) {\n    console.log(\"error\", e);\n  }\n}\n\nexport const commonGetWatcher = helperWatcher(getWithWorker, GET);\n\nexport const commonGetWithParaWatcher = helperWatcher(\n  getWithParaWorker,\n  GET_WITHPARA\n);\n\nexport const commonPostInsertWatcher = helperWatcher(\n  workerPostInsert,\n  POST_INSERT\n);\n\nexport const commonPostUpdateWatcher = helperWatcher(\n  workerPostUpdate,\n  POST_UPDATE\n);\n\nexport const commonPostDeleteWatcher = helperWatcher(\n  workerPostDelete,\n  POST_DELETE\n);\n","//import { call, put, select } from \"redux-saga/effects\";\n\nimport { helperWatcher } from \"../utils/utilities\";\n\nfunction* userListWorker({ payload }) {\n  console.log({ payload });\n}\n\nexport const userListWatcher = helperWatcher(userListWorker, \"testing\");\n","import { put } from \"redux-saga/effects\";\nimport { helperWatcher } from \"../utils/utilities\";\nimport axios from \"axios\";\n\nimport {\n  POSTNOTES,\n  POSTNOTES_RESULT,\n  GET_POSTNOTES,\n  GET_POSTNOTES_RESULT\n} from \"../actions/postNotes\";\n\nfunction* postNotesWorker(action: any) {\n  const { url, data } = action;\n  try {\n    console.log({ url, data });\n    let res = yield axios({\n      method: \"post\",\n      url,\n      data\n    })\n      .then((response: any) => {\n        return response.data;\n      })\n      .catch(function(error: any) {\n        return error;\n      });\n    yield put({\n      type: POSTNOTES_RESULT,\n      payload: {\n        resultPostNotesInsert: {\n          res\n        }\n      }\n    });\n  } catch (error) {\n    console.log({ error });\n  }\n}\n\nfunction* getPostNotesWorker(action: any) {\n  const { url } = action;\n  try {\n    console.log({ url });\n    let res = yield axios({\n      method: \"get\",\n      url\n    })\n      .then((response: any) => {\n        return response.data;\n      })\n      .catch(function(error: any) {\n        return error;\n      });\n    yield put({\n      type: GET_POSTNOTES_RESULT,\n      payload: {\n        resultGetPostNotes: {\n          res\n        }\n      }\n    });\n  } catch (e) {\n    console.log(\"error\", e);\n  }\n}\n\nexport const postNotesWatcher = helperWatcher(postNotesWorker, POSTNOTES);\n\nexport const getPostNotesWatcher = helperWatcher(\n  getPostNotesWorker,\n  GET_POSTNOTES\n);\n","import { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { call, all, spawn } from \"redux-saga/effects\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Reducers\nimport commonReducers from \"./reducers/common\";\nimport homeDetialsReducers from \"./reducers/homeDetails\";\nimport postNotesReducers from \"./reducers/postNotes\";\n\n// Watcher\nimport {\n  commonGetWatcher,\n  commonGetWithParaWatcher,\n  commonPostInsertWatcher,\n  commonPostUpdateWatcher,\n  commonPostDeleteWatcher\n} from \"./sagas/common\";\nimport { userListWatcher } from \"./sagas/homeDetails\";\nimport { postNotesWatcher, getPostNotesWatcher } from \"./sagas/postNotes\";\n\nconst rootSaga = function*() {\n  const sagas = [\n    //common\n    commonGetWatcher,\n    commonGetWithParaWatcher,\n    commonPostInsertWatcher,\n    commonPostUpdateWatcher,\n    commonPostDeleteWatcher,\n    // home Detials\n    userListWatcher,\n    // post notes\n    postNotesWatcher,\n    getPostNotesWatcher\n  ];\n\n  yield all(\n    sagas.map(saga =>\n      spawn(function*() {\n        while (true) {\n          try {\n            yield call(saga);\n            break;\n          } catch (e) {\n            console.log(e);\n          }\n        }\n      })\n    )\n  );\n};\n\nconst rootReducer = combineReducers({\n  common: commonReducers,\n  home: homeDetialsReducers,\n  postNotes: postNotesReducers\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\nexport { store };\n","import * as React from \"react\";\n\n// import { renderRoutes } from 'react-router-config';\nimport Loadable from \"react-loadable\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nconst loading = () => (\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\n);\n\n// Containers\nconst Home = Loadable( {\n  loader: () =>\n    import( \"./screen/Home/Home\" ),\n  loading\n} );\n\nconst About = Loadable( {\n  loader: () =>\n    import( \"./screen/About/About\" ),\n  loading\n} )\nconst Contact = Loadable( {\n  loader: () =>\n    import( \"./screen/Contact/Contact\" ),\n  loading\n} )\nconst PostNotesDetails = Loadable( {\n  loader: () =>\n    import( \"./screen/PostNotes/PostNotesDetails\" ),\n  loading\n} )\n\nexport default function App( props: any ) {\n  return (\n    <Provider store={ store }>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={ \"/\" } component={ Home } />\n          <Route exact path={ \"/about\" } component={ About } />\n          <Route exact path={ \"/contact\" } component={ Contact } />\n          <Route exact path={ \"/postNotes\" } component={ PostNotesDetails } />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}        ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Particles } from '@blackbox-vision/react-particles';\nconst ParticlesJs = () => (\n    <div>\n        <Particles\n            id=\"simple\"\n            width=\"auto\"\n            style={ {\n                backgroundColor: '#7798FF',\n            } }\n            params={ {\n                particles: {\n                    number: {\n                        value: 50,\n                    },\n                    size: {\n                        value: 3,\n                    },\n                },\n                interactivity: {\n                    events: {\n                        onhover: {\n                            enable: true,\n                            mode: 'repulse',\n                        },\n                    },\n                },\n            } }\n        />\n        <div\n            style={ {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\"\n            } }\n        >\n            <App />\n        </div>\n    </div>\n);\n\nReactDOM.render( <ParticlesJs />, document.getElementById( \"root\" ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
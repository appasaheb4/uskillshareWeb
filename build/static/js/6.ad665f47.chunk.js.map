{"version":3,"sources":["common/Colors.ts","components/Navbar/TopNavbar.tsx","assets/images/appasaheb.jpeg","components/List/List.tsx","common/Utilites.ts","screen/Home/Home.tsx","common/Fonts.ts"],"names":["__webpack_exports__","borderColor","black","shadowBlue","textColorGrey","backgroundColor","lightBlue","primary","blue","green","darkGreen","white","red","homepageButtonColor","yellow","lightRed","backgroundColor1","appColor","social_Github","social_Youtube","social_Whatsup","social_Facebook","social_Messager","social_Instagram","social_Twitter","TopNavbarComp","props","_useState","useState","_useState2","Object","_Users_developer_Documents_appasaheb4_project_myproject_react_uskillshareWeb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOpen","setIsOpen","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_2__","color","light","expand","reactstrap__WEBPACK_IMPORTED_MODULE_3__","href","style","fontFamily","fonts","FiraSansBold","colors","reactstrap__WEBPACK_IMPORTED_MODULE_4__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_5__","navbar","reactstrap__WEBPACK_IMPORTED_MODULE_6__","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","OpenSans","reactstrap__WEBPACK_IMPORTED_MODULE_9__","nav","inNavbar","module","exports","__webpack_require__","p","List","slicedToArray","data","setData","useEffect","listJson","react_default","padding","map","item","Fonts","FiraSansRegular","Colors","lang","fontSize","fontWeight","title","src","require","width","height","float","alt","getUnixTimeDate","date","dateTime","Date","getTime","Math","floor","Home","loginModal","setLoginModal","_useState3","_useState4","signUpModal","setSignUpModal","_useState5","_useState6","setLoginType","_useState7","_useState8","userDetails","setUserDetails","_useState9","_useState10","flagPostNotes","setFlagPostNotes","_useState11","_useState12","langNotesList","_useState13","_useState14","selectedLangNotes","setSelectedLangNotes","_useState15","_useState16","_useState17","_useState18","flagProfile","setFlagProfile","toogleModel","toogleSignUpModel","tooglePostNotes","click_SignUp","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","target","password","value","confirmPassword","name","mobileNo","email","ToastsStore","warning","stop","_x","apply","this","arguments","click_Login","_ref2","_callee2","_context2","_x2","click_PostNotes","_ref3","_callee3","_context3","descri","sourceCode","langId","id","userId","console","log","_x3","TopNavbar","clickLogin","clickSignUp","clickPostNotes","clickPostVideos","alert","clickLogout","window","localStorage","removeItem","Jumbotron","textAlign","opacity","Maquire","LobsterRegular","Modal","toggle","ModalHeader","onSubmit","ModalBody","type","placeholder","required","ModalFooter","Button","react_select_browser_esm","autoFocus","onChange","val","options","rows","disabled","lib","store","FiraSansItalic","FiraSansMedium","FiraSansMediumItalic"],"mappings":"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","file":"static/js/6.ad665f47.chunk.js","sourcesContent":["export default {\n  borderColor: \"#E3E3E3\",\n  black: \"#2F2F2F\",\n  shadowBlue: \"#DDECF5\",\n  textColorGrey: \"#6C6C6C\",\n  backgroundColor: \"#F5F5F5\",\n  lightBlue: \"#77B9EB\",\n  primary: \"#007BFF\",\n  blue: \"#006CB4\",\n  green: \"#70C1B3\",\n  darkGreen: \"#33956B\",\n  white: \"#ffffff\",\n  red: \"#FF7761\",\n  homepageButtonColor: \"#2C85C1\",\n  yellow: \"#E9BB35\",\n  lightRed: \"#FF78614D\",\n  backgroundColor1: \"#FCFCFC\",\n  appColor: \"#FFFFFF\",\n  social_Github: \"#3E4447\",\n  social_Youtube: \"#FF0000\",\n  social_Whatsup: \"#4BED69\",\n  social_Facebook: \"#3C5B98\",\n  social_Messager: \"#3A8FF7\",\n  social_Instagram: \"#DE5A4E\",\n  social_Twitter: \"#4AA0EB\"\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\n\nimport fonts from \"../../common/Fonts\";\nimport colors from \"../../common/Colors\";\n\nexport default function TopNavbarComp( props ) {\n    const [ isOpen, setIsOpen ] = useState( false );\n\n    const toggle = () => setIsOpen( !isOpen );\n    return (\n        <Navbar color=\"primary\" light expand=\"md\">\n            <NavbarBrand href=\"/\" style={ { fontFamily: fonts.FiraSansBold, color: colors.white } }>USkill Share</NavbarBrand>\n            <NavbarToggler onClick={ toggle } />\n            <Collapse isOpen={ isOpen } navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <NavLink style={ { color: colors.white, fontFamily: fonts.OpenSans } } href=\"/\">React</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink style={ { color: colors.white, fontFamily: fonts.OpenSans } } href=\"/\">IOS</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink style={ { color: colors.white, fontFamily: fonts.OpenSans } } href=\"/\">NodeJs</NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav className=\"dropdown-menu-right\" navbar>\n                    <UncontrolledDropdown nav inNavbar>\n                        <NavItem>\n                            <NavLink style={ { color: colors.white, fontFamily: fonts.OpenSans } } href=\"/about\">About</NavLink>\n                        </NavItem>\n\n                    </UncontrolledDropdown>\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/appasaheb.3431a483.jpeg\";","import React, { useState, useEffect } from \"react\";\nimport \"../../common/Styles.css\"\n\nimport Fonts from \"../../common/Fonts\";\nimport Colors from \"../../common/Colors\";\nimport Images from \"../../common/Images\";\n\nimport listJson from \"../../assets/json/list.json\";\n\nexport default function List( props ) {\n    const [ data, setData ] = useState( [] );\n\n    useEffect( () => {\n        setData( listJson.data )\n    }, [] )\n    return (\n        <div>\n            <div className=\"row form-group justify-content-center\" style={ { padding: 20 } }>\n                { data.map( ( item: any ) =>\n                    <div className=\"col-md-3  listItem\">\n                        <div className=\"form-group\">\n                            <span style={ { fontFamily: Fonts.FiraSansRegular, color: Colors.textColorGrey } }>{ item.lang }</span><br />\n                            <span style={ { fontFamily: Fonts.FiraSansBold, fontSize: 18, fontWeight: \"bold\" } }>{ item.title }</span><br />\n                            <span style={ { fontFamily: Fonts.FiraSansRegular } }>Push notifications are small\n                                messages that can reach audiences anywhere\n                                and anytime. While pop-ups appear only when audiences\n                                are on the site they belong to, push messages are independent of sites.\n                         They are associated with web browsers and apps.</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <img src={ require( \"../../assets/images/appasaheb.jpeg\" ) }\n                                className=\"rounded-circle \"\n                                style={ { width: 30, height: 30, float: \"left\" } }\n                                alt=\"Cinque Terre\" />\n                            <span\n                                className=\"float-md-right\"\n                                style={ { float: \"right\" } }\n                            >3 MIN READ</span>\n                        </div>\n                        <div className=\"clearfix\"></div>\n                    </div>\n                ) }\n            </div>\n        </div>\n    )\n}   \n","import moment from \"moment\";\n\n//TODO: Date Format\nconst getUnixTimeDate = ( date: any ) => {\n  const dateTime = new Date( date ).getTime();\n  const lastUpdateDate = Math.floor( dateTime / 1000 );\n  return lastUpdateDate;\n};\n\nconst getUnixToDateFormat = ( unixDate: any ) => {\n  return moment.unix( unixDate ).format( \"DD-MM-YYYY HH:mm:ss\" );\n};\nconst getUnixToNormaDateFormat = ( unixDate: any ) => {\n  return moment.unix( unixDate ).format( \"DD-MM-YYYY\" );\n};\n\nconst getDateForYYYYMMDD = ( unixDate: any ) => {\n  return moment.unix( unixDate ).format( \"YYYY-MM-DD\" );\n};\n\nexport {\n  getUnixTimeDate,\n  getUnixToDateFormat,\n  getUnixToNormaDateFormat,\n  getDateForYYYYMMDD,\n};  \n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Jumbotron, Row, Col,\n  Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\nimport Fab from '@material-ui/core/Fab';\nimport { Favorite, AddComment, Share } from '@material-ui/icons';\nimport { Player } from 'video-react';\nimport {\n  Tabs,\n  Tab,\n  ListGroup,\n  Card,\n  Image,\n  ButtonToolbar,\n  DropdownButton,\n  Dropdown,\n  SplitButton\n} from 'react-bootstrap';\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport Select from 'react-select';\n\nimport \"./Home.css\";\n\nimport { TopNavbarComp, BottomNavbarComp } from \"../../components/Navbar\";\nimport { List } from \"../../components/List\";\n\n//TODO: Custom Object\nimport { getUnixTimeDate } from \"../../common/Utilites\";\nimport fonts from \"../../common/Fonts\";\nimport colors from \"../../common/Colors\";\n\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onCommonPostInsert, onCommonGet } from \"../../redux/actions/common\";\nimport { onPostNotes, onGetPostNotes } from \"../../redux/actions/postNotes\";\n\nexport default function Home( props ) {\n  const [ loginModal, setLoginModal ] = useState( false );\n  const [ signUpModal, setSignUpModal ] = useState( false );\n  const [ loginType, setLoginType ] = useState( \"login\" );\n  const [ userDetails, setUserDetails ] = useState( null );\n  const [ flagPostNotes, setFlagPostNotes ] = useState( false );\n  const [ langNotesList, setLangNotesList ] = useState( [] );\n  const [ selectedLangNotes, setSelectedLangNotes ] = useState( {} );\n  const [ arrPostNotes, setArrPostNotes ] = useState( [] );\n  const [ flagProfile, setFlagProfile ] = useState( false );\n\n  // const dispatch = useDispatch();\n  // const { resultPostInsert, resultGet } = useSelector( state => state.common );\n  // const { resultPostNotesInsert, resultGetPostNotes } = useSelector( state => state.postNotes );\n\n  // useEffect( () => {\n  //   let userDetails = JSON.parse( window.localStorage.getItem( \"userDetails\" ) );\n  //   setUserDetails( userDetails );\n  //   dispatch( onCommonGet( { url: apiary.getAllLang } ) );\n  //   dispatch( onGetPostNotes( { url: apiary.getPostNotes } ) );\n  // }, [] )\n\n\n  // useEffect( () => {\n  //   let res = resultGet.res;\n  //   if ( res != undefined ? res : false ) {\n  //     let arrLangList = [];\n  //     for ( let i = 0; i < res.data.length; i++ ) {\n  //       let data = {};\n  //       data.value = res.data[ i ];\n  //       data.label = res.data[ i ].langName;\n  //       arrLangList.push( data );\n  //     }\n  //     setSelectedLangNotes( arrLangList[ 0 ].value )\n  //     setLangNotesList( arrLangList );\n  //   }\n  // }, [ resultGet ] )\n\n  // useEffect( () => {\n  //   let res = resultGetPostNotes.res;\n  //   if ( res != undefined ? res : false )\n  //     setArrPostNotes( res.data );\n\n  // }, [ resultGetPostNotes ] )\n\n\n\n\n\n  // model popup \n  const toogleModel = () => {\n    setLoginModal( !loginModal );\n  }\n  const toogleSignUpModel = () => {\n    setSignUpModal( !signUpModal );\n  }\n\n  const tooglePostNotes = () => {\n    setFlagPostNotes( !flagPostNotes );\n  }\n\n  const toogleProfile = () => {\n    setFlagProfile( !flagProfile );\n  }\n\n  const clickLogout = () => {\n    setUserDetails( null );\n    window.localStorage.removeItem( \"userDetails\" );\n  }\n\n  // Sign Up  \n  const click_SignUp = async ( e ) => {\n    e.preventDefault();\n    if ( e.target.password.value == e.target.confirmPassword.value ) {\n      setLoginType( \"signUp\" );\n      let data = {\n        date: getUnixTimeDate( new Date() ),\n        name: e.target.name.value,\n        mobileNo: e.target.mobileNo.value,\n        email: e.target.email.value,\n        password: e.target.confirmPassword.value\n      }\n      // dispatch( onCommonPostInsert( { url: apiary.registration, data } ) );\n    } else {\n      ToastsStore.warning( \"Please enter correct password.\" );\n    }\n  }\n\n  const click_Login = async ( e ) => {\n    e.preventDefault();\n    setLoginType( \"login\" );\n    let data = {\n      email: e.target.email.value,\n      password: e.target.password.value\n    }\n    // dispatch( onCommonPostInsert( { url: apiary.loginUser, data } ) );\n  }\n\n\n  // useEffect( () => {\n  //   let res = resultPostInsert.res;\n  //   console.log( { res } );\n  //   if ( res != undefined ? res : false ) {\n  //     if ( loginType == \"signUp\" ) {\n  //       if ( res.statusCode == 200 ) {\n  //         setSignUpModal( !signUpModal );\n  //         ToastsStore.success( res.data );\n  //       } else {\n  //         ToastsStore.success( res.data.msg );\n  //       }\n  //     } else {\n  //       if ( res.statusCode == 200 ) {\n  //         let userDel = res.data.results[ 0 ];\n  //         window.localStorage.setItem( \"userDetails\", JSON.stringify( userDel ) );\n  //         setUserDetails( userDel );\n  //         setLoginModal( !loginModal );\n  //         ToastsStore.success( res.data.msg );\n  //       } else {\n  //         ToastsStore.success( res.data.msg );\n  //       }\n  //     }\n  //   }\n  // }, [ resultPostInsert ] )\n\n\n  const click_PostNotes = async ( e ) => {\n    e.preventDefault();\n    let data = {\n      date: getUnixTimeDate( new Date() ),\n      title: e.target.title.value,\n      descri: e.target.descri.value,\n      sourceCode: e.target.sourceCode.value,\n      langId: selectedLangNotes.id,\n      userId: userDetails.id\n    }\n    //dispatch( onPostNotes( { url: apiary.postNotes, data } ) )\n    console.log( { data } );\n  }\n\n\n\n  // useEffect( () => {\n  //   let res = resultPostNotesInsert.res;\n  //   console.log( { res } );\n  //   if ( res != undefined ? res : false ) {\n  //     if ( res.statusCode == 200 ) {\n  //       ToastsStore.success( res.data );\n  //     } else {\n  //       ToastsStore.success( res.data.msg );\n  //     }\n  //     tooglePostNotes();\n  //   }\n  // }, [ resultPostNotesInsert ] );\n\n\n  return (\n    <div>\n\n      <div>\n        <TopNavbarComp\n          userDetails={ userDetails }\n          clickLogin={ () => toogleModel() }\n          clickSignUp={ () => toogleSignUpModel() }\n          clickPostNotes={ () => tooglePostNotes() }\n          clickPostVideos={ () => alert( 'commin soon' ) }\n          clickLogout={ () => clickLogout() }\n        />\n      </div>\n\n      <div>\n        <Jumbotron style={ { textAlign: \"center\", opacity: 0.5 } }>\n          <h1 style={ { fontFamily: fonts.Maquire } }>Your Skill Share!</h1>\n          <p style={ { fontFamily: fonts.LobsterRegular } }>\n            end to end encrypted and decrypted data.\n         </p>\n        </Jumbotron>\n      </div>\n\n      <div>\n        <List />\n      </div>\n\n      {/* Modal Login */ }\n      <Modal isOpen={ loginModal } toggle={ toogleModel } >\n        <ModalHeader>Login</ModalHeader>\n        <form onSubmit={ ( e ) => click_Login( e ) }>\n          <ModalBody>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Email</label>\n              <input className=\"form-control col-7\" type=\"email\" name=\"email\" placeholder=\"Email\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Password</label>\n              <input className=\"form-control col-7\" type=\"password\" name=\"password\" placeholder=\"Password\" required />\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\" >Login</Button>\n          </ModalFooter>\n        </form>\n      </Modal>\n\n      {/* Modal Sign Up */ }\n      <Modal isOpen={ signUpModal } toggle={ toogleSignUpModel } >\n        <ModalHeader>Sign Up</ModalHeader>\n        <form onSubmit={ ( e ) => click_SignUp( e ) }>\n          <ModalBody>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Name</label>\n              <input className=\"form-control col-7\" type=\"text\" name=\"name\" placeholder=\"Name\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Mobile No</label>\n              <input className=\"form-control col-7\" type=\"text\" name=\"mobileNo\" placeholder=\"Mobile No\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Email</label>\n              <input className=\"form-control col-7\" type=\"email\" name=\"email\" placeholder=\"Email\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Password</label>\n              <input className=\"form-control col-7\" type=\"password\" name=\"password\" placeholder=\"Password\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Confirm Password</label>\n              <input className=\"form-control col-7\" type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" required />\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\" >Sign Up</Button>\n          </ModalFooter>\n        </form>\n      </Modal>\n\n      {/* Modal Post Notes */ }\n      <Modal isOpen={ flagPostNotes } toggle={ tooglePostNotes }>\n\n        <ModalHeader>Post Notes</ModalHeader>\n        <form onSubmit={ ( e ) => click_PostNotes( e ) }>\n          <ModalBody>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Language</label>\n              <div className=\"col-md-7\">\n                <Select\n                  autoFocus={ true }\n                  //placeholder={ selectedOption }\n                  // value={ selectedOption }\n                  onChange={ ( val ) => setSelectedLangNotes( val.value ) }\n                  options={ langNotesList }\n                />\n              </div>\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Title:</label>\n              <input className=\"form-control col-7\" type=\"text\" name=\"title\" placeholder=\"Title\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Description:</label>\n              <textarea rows={ 2 } className=\"form-control col-7\" name=\"descri\" placeholder=\"Description\" required></textarea>\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Source Code:</label>\n              <textarea rows={ 4 } className=\"form-control col-7\" name=\"sourceCode\" placeholder=\"Source Code\" required></textarea>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\">Post</Button>\n          </ModalFooter>\n        </form>\n      </Modal>\n      {/* Modal Post Videos */ }\n\n\n      {/* Model Profile Details */ }\n\n      <Modal isOpen={ flagProfile } toggle={ toogleProfile }>\n        <ModalHeader>Profile</ModalHeader>\n        <ModalBody>\n          <div className=\"form-group form-inline\">\n            <label className=\"col-3\">Name:</label>\n            <input className=\"form-control col-7\" value={ \"hi\" } disabled />\n          </div>\n        </ModalBody>\n      </Modal>\n      <ToastsContainer store={ ToastsStore } />\n    </div >\n  );\n}\n\nconst itemCenter = {\n  alignItems: \"center\",\n  textAlign: \"center\"\n} as React.CSSProperties;\n","export default {\n  FiraSansRegular: \"FiraSans-Regular\",\n  FiraSansBold: \"FiraSans-Bold\",\n  FiraSansItalic: \"FiraSans-Italic\",\n  FiraSansMedium: \"FiraSans-Medium\",\n  FiraSansMediumItalic: \"FiraSans-MediumItalic\",\n  OpenSans: \"OpenSans\",\n\n  //Lobster\n  LobsterRegular: \"Lobster-Regular\",\n\n  //VoiceActivatedBB\n  Maquire: \"Maquire\"\n};  \n"],"sourceRoot":""}
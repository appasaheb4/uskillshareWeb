{"version":3,"sources":["components/Navbar/TopNavbar.tsx","components/Navbar/BottomNavbar.tsx","common/constants/utils.tsx","screen/Home/Home.tsx","common/Colors.js","common/Fonts.js"],"names":["TopNavbarComp","props","_useState","useState","_useState2","Object","_Users_developer_Documents_appasaheb4_project_myproject_react_uskillshareWeb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOpen","setIsOpen","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_2__","color","light","expand","reactstrap__WEBPACK_IMPORTED_MODULE_3__","href","style","fontFamily","fonts","FiraSansBold","colors","white","reactstrap__WEBPACK_IMPORTED_MODULE_4__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_5__","navbar","reactstrap__WEBPACK_IMPORTED_MODULE_6__","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","OpenSans","userDetails","reactstrap__WEBPACK_IMPORTED_MODULE_9__","nav","inNavbar","reactstrap__WEBPACK_IMPORTED_MODULE_10__","caret","name","reactstrap__WEBPACK_IMPORTED_MODULE_11__","right","reactstrap__WEBPACK_IMPORTED_MODULE_12__","clickPostNotes","clickPostVideos","clickLogout","clickLogin","__webpack_require__","d","__webpack_exports__","BottomNavbarComp","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_common_Fonts__WEBPACK_IMPORTED_MODULE_1__","_common_Colors__WEBPACK_IMPORTED_MODULE_2__","position","bottom","width","backgroundColor","primary","FiraSansMediumItalic","textAlign","getUnixTimeDate","date","dateTime","Date","getTime","Math","floor","Home","slicedToArray","loginModal","setLoginModal","_useState3","_useState4","signUpModal","setSignUpModal","_useState5","_useState6","setLoginType","_useState7","_useState8","setUserDetails","_useState9","_useState10","flagPostNotes","setFlagPostNotes","_useState11","_useState12","langNotesList","_useState13","_useState14","selectedLangNotes","setSelectedLangNotes","_useState15","_useState16","_useState17","_useState18","flagProfile","setFlagProfile","toogleModel","toogleSignUpModel","tooglePostNotes","click_SignUp","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","target","password","value","confirmPassword","mobileNo","email","ToastsStore","warning","stop","_x","apply","this","arguments","click_Login","_ref2","_callee2","_context2","_x2","click_PostNotes","_ref3","_callee3","data","_context3","title","descri","sourceCode","langId","id","userId","console","log","_x3","react_default","TopNavbar","clickSignUp","alert","window","localStorage","removeItem","Jumbotron","opacity","Maquire","LobsterRegular","Modal","toggle","ModalHeader","onSubmit","ModalBody","type","placeholder","required","ModalFooter","Button","react_select_browser_esm","autoFocus","onChange","val","options","rows","disabled","lib","store","borderColor","black","shadowBlue","textColorGrey","lightBlue","blue","green","darkGreen","red","homepageButtonColor","yellow","lightRed","backgroundColor1","appColor","social_Github","social_Youtube","social_Whatsup","social_Facebook","social_Messager","social_Instagram","social_Twitter","FiraSansRegular","FiraSansItalic","FiraSansMedium"],"mappings":"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","file":"static/js/10.a6a27c25.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\n\nimport fonts from \"../../common/Fonts\";\nimport colors from \"../../common/Colors\";\n\nexport default function TopNavbarComp( props ) {\n    const [ isOpen, setIsOpen ] = useState( false );\n\n    const toggle = () => setIsOpen( !isOpen );\n    return (\n        <Navbar color=\"primary\" light expand=\"md\">\n            <NavbarBrand href=\"/\" style={ { fontFamily: fonts.FiraSansBold, color: colors.white } }>USkill Share</NavbarBrand>\n            <NavbarToggler onClick={ toggle } />\n            <Collapse isOpen={ isOpen } navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <NavLink style={ { color: colors.white, fontFamily: fonts.OpenSans } } href=\"/about\">ReactWeb</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink style={ { color: colors.white, fontFamily: fonts.OpenSans } } href=\"/contact\">React-Native</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink style={ { color: colors.white, fontFamily: fonts.OpenSans } } href=\"/contact\">IOS</NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav className=\"dropdown-menu-right\" navbar>\n                    { props.userDetails != null ? (\n                        <UncontrolledDropdown nav inNavbar>\n                            < DropdownToggle nav caret style={ { color: colors.white, fontFamily: fonts.OpenSans } }>\n                                hi { props.userDetails.name }\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem style={ { fontFamily: fonts.OpenSans } } onClick={ () => props.clickPostNotes() }>\n                                    Post Notes\n                </DropdownItem>\n                                <DropdownItem style={ { fontFamily: fonts.OpenSans } } onClick={ () => props.clickPostVideos() }>\n                                    Post Videos\n                </DropdownItem>\n                                <DropdownItem style={ { fontFamily: fonts.OpenSans } } onClick={ () => props.clickLogout() }>\n                                    Logout\n                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    ) : (\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle nav caret style={ { color: colors.white, fontFamily: fonts.OpenSans } }>\n                                    Select\n              </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem style={ { fontFamily: fonts.OpenSans } } onClick={ () => props.clickLogin() }>\n                                        Login\n                </DropdownItem>\n                                    {/* <DropdownItem style={ { fontFamily: fonts.OpenSans } } onClick={ () => props.clickSignUp() }>\n                                        Sign Up\n                </DropdownItem> */}\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        )\n                    }\n                </Nav>\n            </Collapse>\n        </Navbar>\n    )\n}\n\n","import React, { useState } from \"react\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\n\nimport fonts from \"../../common/Fonts\";\nimport colors from \"../../common/Colors\";\n\nexport default function BottomNavbarComp( props ) {\n    return (\n        <footer style={ { position: \"relative\", bottom: 0, width: \"100%\", backgroundColor: colors.primary } }>\n            <h1 style={ { fontFamily: fonts.FiraSansMediumItalic, textAlign: \"center\" } }>commin soon</h1>\n        </footer>\n    )\n}\n","import moment from \"moment\";\n\n//TODO: Date Format\nconst getUnixTimeDate = ( date: any ) => {\n  const dateTime = new Date( date ).getTime();\n  const lastUpdateDate = Math.floor( dateTime / 1000 );\n  return lastUpdateDate;\n};\n\nconst getUnixToDateFormat = ( unixDate: any ) => {\n  return moment.unix( unixDate ).format( \"DD-MM-YYYY HH:mm:ss\" );\n};\nconst getUnixToNormaDateFormat = ( unixDate: any ) => {\n  return moment.unix( unixDate ).format( \"DD-MM-YYYY\" );\n};\n\nconst getDateForYYYYMMDD = ( unixDate: any ) => {\n  return moment.unix( unixDate ).format( \"YYYY-MM-DD\" );\n};\n\nexport {\n  getUnixTimeDate,\n  getUnixToDateFormat,\n  getUnixToNormaDateFormat,\n  getDateForYYYYMMDD,\n};  \n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Jumbotron, Row, Col,\n  Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\nimport Fab from '@material-ui/core/Fab';\nimport { Favorite, AddComment, Share } from '@material-ui/icons';\nimport { Player } from 'video-react';\nimport {\n  Tabs,\n  Tab,\n  ListGroup,\n  Card,\n  Image,\n  ButtonToolbar,\n  DropdownButton,\n  Dropdown,\n  SplitButton\n} from 'react-bootstrap';\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport Select from 'react-select';\n\nimport \"./Home.css\";\n\nimport { TopNavbarComp, BottomNavbarComp } from \"../../components/Navbar\";\n\n//TODO: Custom Object\nimport { apiary } from \"../../common/constants/Constants\";\nimport { getUnixTimeDate, getUnixToDateFormat } from \"../../common/constants/utils\";\nimport fonts from \"../../common/Fonts\";\nimport colors from \"../../common/Colors\";\n\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onCommonPostInsert, onCommonGet } from \"../../redux/actions/common\";\nimport { onPostNotes, onGetPostNotes } from \"../../redux/actions/postNotes\";\n\nexport default function Home( props ) {\n  const [ loginModal, setLoginModal ] = useState( false );\n  const [ signUpModal, setSignUpModal ] = useState( false );\n  const [ loginType, setLoginType ] = useState( \"login\" );\n  const [ userDetails, setUserDetails ] = useState( null );\n  const [ flagPostNotes, setFlagPostNotes ] = useState( false );\n  const [ langNotesList, setLangNotesList ] = useState( [] );\n  const [ selectedLangNotes, setSelectedLangNotes ] = useState( {} );\n  const [ arrPostNotes, setArrPostNotes ] = useState( [] );\n  const [ flagProfile, setFlagProfile ] = useState( false );\n\n  // const dispatch = useDispatch();\n  // const { resultPostInsert, resultGet } = useSelector( state => state.common );\n  // const { resultPostNotesInsert, resultGetPostNotes } = useSelector( state => state.postNotes );\n\n  // useEffect( () => {\n  //   let userDetails = JSON.parse( window.localStorage.getItem( \"userDetails\" ) );\n  //   setUserDetails( userDetails );\n  //   dispatch( onCommonGet( { url: apiary.getAllLang } ) );\n  //   dispatch( onGetPostNotes( { url: apiary.getPostNotes } ) );\n  // }, [] )\n\n\n  // useEffect( () => {\n  //   let res = resultGet.res;\n  //   if ( res != undefined ? res : false ) {\n  //     let arrLangList = [];\n  //     for ( let i = 0; i < res.data.length; i++ ) {\n  //       let data = {};\n  //       data.value = res.data[ i ];\n  //       data.label = res.data[ i ].langName;\n  //       arrLangList.push( data );\n  //     }\n  //     setSelectedLangNotes( arrLangList[ 0 ].value )\n  //     setLangNotesList( arrLangList );\n  //   }\n  // }, [ resultGet ] )\n\n  // useEffect( () => {\n  //   let res = resultGetPostNotes.res;\n  //   if ( res != undefined ? res : false )\n  //     setArrPostNotes( res.data );\n\n  // }, [ resultGetPostNotes ] )\n\n\n\n\n\n  // model popup \n  const toogleModel = () => {\n    setLoginModal( !loginModal );\n  }\n  const toogleSignUpModel = () => {\n    setSignUpModal( !signUpModal );\n  }\n\n  const tooglePostNotes = () => {\n    setFlagPostNotes( !flagPostNotes );\n  }\n\n  const toogleProfile = () => {\n    setFlagProfile( !flagProfile );\n  }\n\n  const clickLogout = () => {\n    setUserDetails( null );\n    window.localStorage.removeItem( \"userDetails\" );\n  }\n\n  // Sign Up  \n  const click_SignUp = async ( e ) => {\n    e.preventDefault();\n    if ( e.target.password.value == e.target.confirmPassword.value ) {\n      setLoginType( \"signUp\" );\n      let data = {\n        date: getUnixTimeDate( new Date() ),\n        name: e.target.name.value,\n        mobileNo: e.target.mobileNo.value,\n        email: e.target.email.value,\n        password: e.target.confirmPassword.value\n      }\n      // dispatch( onCommonPostInsert( { url: apiary.registration, data } ) );\n    } else {\n      ToastsStore.warning( \"Please enter correct password.\" );\n    }\n  }\n\n  const click_Login = async ( e ) => {\n    e.preventDefault();\n    setLoginType( \"login\" );\n    let data = {\n      email: e.target.email.value,\n      password: e.target.password.value\n    }\n    // dispatch( onCommonPostInsert( { url: apiary.loginUser, data } ) );\n  }\n\n\n  // useEffect( () => {\n  //   let res = resultPostInsert.res;\n  //   console.log( { res } );\n  //   if ( res != undefined ? res : false ) {\n  //     if ( loginType == \"signUp\" ) {\n  //       if ( res.statusCode == 200 ) {\n  //         setSignUpModal( !signUpModal );\n  //         ToastsStore.success( res.data );\n  //       } else {\n  //         ToastsStore.success( res.data.msg );\n  //       }\n  //     } else {\n  //       if ( res.statusCode == 200 ) {\n  //         let userDel = res.data.results[ 0 ];\n  //         window.localStorage.setItem( \"userDetails\", JSON.stringify( userDel ) );\n  //         setUserDetails( userDel );\n  //         setLoginModal( !loginModal );\n  //         ToastsStore.success( res.data.msg );\n  //       } else {\n  //         ToastsStore.success( res.data.msg );\n  //       }\n  //     }\n  //   }\n  // }, [ resultPostInsert ] )\n\n\n  const click_PostNotes = async ( e ) => {\n    e.preventDefault();\n    let data = {\n      date: getUnixTimeDate( new Date() ),\n      title: e.target.title.value,\n      descri: e.target.descri.value,\n      sourceCode: e.target.sourceCode.value,\n      langId: selectedLangNotes.id,\n      userId: userDetails.id\n    }\n    //dispatch( onPostNotes( { url: apiary.postNotes, data } ) )\n    console.log( { data } );\n  }\n\n\n\n  // useEffect( () => {\n  //   let res = resultPostNotesInsert.res;\n  //   console.log( { res } );\n  //   if ( res != undefined ? res : false ) {\n  //     if ( res.statusCode == 200 ) {\n  //       ToastsStore.success( res.data );\n  //     } else {\n  //       ToastsStore.success( res.data.msg );\n  //     }\n  //     tooglePostNotes();\n  //   }\n  // }, [ resultPostNotesInsert ] );\n\n\n  return (\n    <div >\n      <div>\n        <TopNavbarComp\n          userDetails={ userDetails }\n          clickLogin={ () => toogleModel() }\n          clickSignUp={ () => toogleSignUpModel() }\n          clickPostNotes={ () => tooglePostNotes() }\n          clickPostVideos={ () => alert( 'commin soon' ) }\n          clickLogout={ () => clickLogout() }\n        />\n      </div>\n      <div>\n        <Jumbotron style={ { textAlign: \"center\", opacity: 0.5 } }>\n          <h1 style={ { fontFamily: fonts.Maquire } }>Your Skill Share!</h1>\n          <p style={ { fontFamily: fonts.LobsterRegular } }>\n            end to end encrypted and decrypted data.\n         </p>\n        </Jumbotron>\n      </div>\n      <div>\n\n      </div>\n\n      {/* Modal Login */ }\n      <Modal isOpen={ loginModal } toggle={ toogleModel } >\n        <ModalHeader>Login</ModalHeader>\n        <form onSubmit={ ( e ) => click_Login( e ) }>\n          <ModalBody>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Email</label>\n              <input className=\"form-control col-7\" type=\"email\" name=\"email\" placeholder=\"Email\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Password</label>\n              <input className=\"form-control col-7\" type=\"password\" name=\"password\" placeholder=\"Password\" required />\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\" >Login</Button>\n          </ModalFooter>\n        </form>\n      </Modal>\n\n      {/* Modal Sign Up */ }\n      <Modal isOpen={ signUpModal } toggle={ toogleSignUpModel } >\n        <ModalHeader>Sign Up</ModalHeader>\n        <form onSubmit={ ( e ) => click_SignUp( e ) }>\n          <ModalBody>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Name</label>\n              <input className=\"form-control col-7\" type=\"text\" name=\"name\" placeholder=\"Name\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Mobile No</label>\n              <input className=\"form-control col-7\" type=\"text\" name=\"mobileNo\" placeholder=\"Mobile No\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Email</label>\n              <input className=\"form-control col-7\" type=\"email\" name=\"email\" placeholder=\"Email\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Password</label>\n              <input className=\"form-control col-7\" type=\"password\" name=\"password\" placeholder=\"Password\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Confirm Password</label>\n              <input className=\"form-control col-7\" type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" required />\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\" >Sign Up</Button>\n          </ModalFooter>\n        </form>\n      </Modal>\n\n      {/* Modal Post Notes */ }\n      <Modal isOpen={ flagPostNotes } toggle={ tooglePostNotes }>\n\n        <ModalHeader>Post Notes</ModalHeader>\n        <form onSubmit={ ( e ) => click_PostNotes( e ) }>\n          <ModalBody>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Language</label>\n              <div className=\"col-md-7\">\n                <Select\n                  autoFocus={ true }\n                  //placeholder={ selectedOption }\n                  // value={ selectedOption }\n                  onChange={ ( val ) => setSelectedLangNotes( val.value ) }\n                  options={ langNotesList }\n                />\n              </div>\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Title:</label>\n              <input className=\"form-control col-7\" type=\"text\" name=\"title\" placeholder=\"Title\" required />\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Description:</label>\n              <textarea rows={ 2 } className=\"form-control col-7\" name=\"descri\" placeholder=\"Description\" required></textarea>\n            </div>\n            <div className=\"form-group form-inline\">\n              <label className=\"col-3\">Source Code:</label>\n              <textarea rows={ 4 } className=\"form-control col-7\" name=\"sourceCode\" placeholder=\"Source Code\" required></textarea>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button type=\"submit\" color=\"primary\">Post</Button>\n          </ModalFooter>\n        </form>\n      </Modal>\n      {/* Modal Post Videos */ }\n\n\n      {/* Model Profile Details */ }\n\n      <Modal isOpen={ flagProfile } toggle={ toogleProfile }>\n        <ModalHeader>Profile</ModalHeader>\n        <ModalBody>\n          <div className=\"form-group form-inline\">\n            <label className=\"col-3\">Name:</label>\n            <input className=\"form-control col-7\" value={ \"hi\" } disabled />\n          </div>\n        </ModalBody>\n      </Modal>\n      <ToastsContainer store={ ToastsStore } />\n    </div >\n  );\n}\n\nconst itemCenter = {\n  alignItems: \"center\",\n  textAlign: \"center\"\n} as React.CSSProperties;\n","export default {\n  borderColor: \"#E3E3E3\",\n  black: \"#2F2F2F\",\n  shadowBlue: \"#DDECF5\",\n  textColorGrey: \"#6C6C6C\",\n  backgroundColor: \"#F5F5F5\",\n  lightBlue: \"#77B9EB\",\n  primary: \"#007BFF\",\n  blue: \"#006CB4\",\n  green: \"#70C1B3\",\n  darkGreen: \"#33956B\",\n  white: \"#ffffff\",\n  red: \"#FF7761\",\n  homepageButtonColor: \"#2C85C1\",\n  yellow: \"#E9BB35\",\n  lightRed: \"#FF78614D\",\n  backgroundColor1: \"#FCFCFC\",\n  appColor: \"#FFFFFF\",\n  social_Github: \"#3E4447\",\n  social_Youtube: \"#FF0000\",\n  social_Whatsup: \"#4BED69\",\n  social_Facebook: \"#3C5B98\",\n  social_Messager: \"#3A8FF7\",\n  social_Instagram: \"#DE5A4E\",\n  social_Twitter: \"#4AA0EB\"\n};\n","export default {\n  FiraSansRegular: \"FiraSans-Regular\",\n  FiraSansBold: \"FiraSans-Bold\",\n  FiraSansItalic: \"FiraSans-Italic\",\n  FiraSansMedium: \"FiraSans-Medium\",\n  FiraSansMediumItalic: \"FiraSans-MediumItalic\",\n  OpenSans: \"OpenSans\",\n\n  //Lobster\n  LobsterRegular: \"Lobster-Regular\",\n\n  //VoiceActivatedBB\n  Maquire: \"Maquire\"\n};\n"],"sourceRoot":""}